{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/DrawList/DrawList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectDrawNums } from '../../Redux/reducers/historySlice';\nimport { delayForOneNumber } from '../../helpers/constant';\nimport s from './DrawList.module.scss';\nimport DrawNum from '../DrawNum/DrawNum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawList = _ref => {\n  _s();\n\n  let {\n    nums\n  } = _ref;\n  const waitRef = useRef(null);\n  const [drawNums, setDrawNums] = useState([]); // const nums = useSelector(selectDrawNums);\n\n  const wait = async t => {\n    return new Promise(res => {\n      setTimeout(() => {\n        res(true);\n      }, t);\n    });\n  };\n\n  const main = async (nums, setDrawNums) => {\n    let count = nums.length;\n    const time = new Date().getTime();\n    waitRef.current = time;\n    setDrawNums(() => []);\n\n    if (count > 0) {\n      while (count >= 0) {\n        if (time !== waitRef.current) {\n          break;\n        }\n\n        const c = count;\n\n        if (nums[nums.length - c]) {\n          setDrawNums(prevState => [...prevState, nums[nums.length - c]]);\n          count--;\n        }\n\n        await wait(delayForOneNumber);\n      }\n    }\n  };\n\n  useEffect(() => {\n    main(nums, setDrawNums);\n  }, [nums]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.draw__list,\n    children: drawNums.map(num => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.draw__item,\n        children: /*#__PURE__*/_jsxDEV(DrawNum, {\n          show: true,\n          children: num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawList, \"DsXLaAGepXJK6nANoit8V8uSXG0=\");\n\n_c = DrawList;\nexport default _c2 = /*#__PURE__*/memo(DrawList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DrawList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useEffect","useRef","useState","useSelector","selectDrawNums","delayForOneNumber","s","DrawNum","DrawList","nums","waitRef","drawNums","setDrawNums","wait","t","Promise","res","setTimeout","main","count","length","time","Date","getTime","current","c","prevState","draw__list","map","num","draw__item"],"sources":["/Users/test/turbo_keno_tv/src/components/DrawList/DrawList.jsx"],"sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectDrawNums } from '../../Redux/reducers/historySlice';\nimport { delayForOneNumber } from '../../helpers/constant';\nimport s from './DrawList.module.scss';\nimport DrawNum from '../DrawNum/DrawNum';\n\nconst DrawList = ({nums}) => {\n  const waitRef = useRef(null);\n  const [drawNums, setDrawNums] = useState([]);\n  // const nums = useSelector(selectDrawNums);\n\n  const wait = async t => {\n    return new Promise(res => {\n      setTimeout(() => {\n        res(true);\n      }, t);\n    });\n  };\n\n  const main = async (nums, setDrawNums) => {\n    let count = nums.length;\n    const time = new Date().getTime();\n    waitRef.current = time;\n    setDrawNums(() => []);\n    if (count > 0) {\n      while (count >= 0) {\n        if (time !== waitRef.current) {\n          break;\n        }\n        const c = count;\n        if (nums[nums.length - c]) {\n          setDrawNums(prevState => [...prevState, nums[nums.length - c]]);\n          count--;\n        }\n        await wait(delayForOneNumber);\n      }\n    }\n  };\n\n  useEffect(() => {\n    main(nums, setDrawNums);\n  }, [nums]);\n\n  return (\n    <ul className={s.draw__list}>\n      {drawNums.map(num => {\n        return (\n          <li key={num} className={s.draw__item}>\n            <DrawNum show={true}>{num}</DrawNum>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default memo(DrawList);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,QAAQ,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAC3B,MAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC,CAF2B,CAG3B;;EAEA,MAAMW,IAAI,GAAG,MAAMC,CAAN,IAAW;IACtB,OAAO,IAAIC,OAAJ,CAAYC,GAAG,IAAI;MACxBC,UAAU,CAAC,MAAM;QACfD,GAAG,CAAC,IAAD,CAAH;MACD,CAFS,EAEPF,CAFO,CAAV;IAGD,CAJM,CAAP;EAKD,CAND;;EAQA,MAAMI,IAAI,GAAG,OAAOT,IAAP,EAAaG,WAAb,KAA6B;IACxC,IAAIO,KAAK,GAAGV,IAAI,CAACW,MAAjB;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;IACAb,OAAO,CAACc,OAAR,GAAkBH,IAAlB;IACAT,WAAW,CAAC,MAAM,EAAP,CAAX;;IACA,IAAIO,KAAK,GAAG,CAAZ,EAAe;MACb,OAAOA,KAAK,IAAI,CAAhB,EAAmB;QACjB,IAAIE,IAAI,KAAKX,OAAO,CAACc,OAArB,EAA8B;UAC5B;QACD;;QACD,MAAMC,CAAC,GAAGN,KAAV;;QACA,IAAIV,IAAI,CAACA,IAAI,CAACW,MAAL,GAAcK,CAAf,CAAR,EAA2B;UACzBb,WAAW,CAACc,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAejB,IAAI,CAACA,IAAI,CAACW,MAAL,GAAcK,CAAf,CAAnB,CAAd,CAAX;UACAN,KAAK;QACN;;QACD,MAAMN,IAAI,CAACR,iBAAD,CAAV;MACD;IACF;EACF,CAlBD;;EAoBAL,SAAS,CAAC,MAAM;IACdkB,IAAI,CAACT,IAAD,EAAOG,WAAP,CAAJ;EACD,CAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;EAIA,oBACE;IAAI,SAAS,EAAEH,CAAC,CAACqB,UAAjB;IAAA,UACGhB,QAAQ,CAACiB,GAAT,CAAaC,GAAG,IAAI;MACnB,oBACE;QAAc,SAAS,EAAEvB,CAAC,CAACwB,UAA3B;QAAA,uBACE,QAAC,OAAD;UAAS,IAAI,EAAE,IAAf;UAAA,UAAsBD;QAAtB;UAAA;UAAA;UAAA;QAAA;MADF,GAASA,GAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CANA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAhDD;;GAAMrB,Q;;KAAAA,Q;AAkDN,kCAAeT,IAAI,CAACS,QAAD,CAAnB"},"metadata":{},"sourceType":"module"}