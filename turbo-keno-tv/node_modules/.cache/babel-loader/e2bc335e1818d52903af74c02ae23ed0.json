{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  maxBet: null,\n  minBet: null,\n  maxWin: null,\n  currency: null,\n  error: null\n};\nexport const limitsSlice = createSlice({\n  name: 'limits',\n  initialState,\n  reducers: {\n    setLimits: (state, action) => {\n      state.maxBet = action.payload.maxBet;\n      state.minBet = action.payload.minBet;\n      state.maxWin = action.payload.maxWin;\n      state.currency = action.payload.currency;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getLimits.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(getLimits.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.error = null;\n      state.maxBet = action.payload.maxBet;\n      state.minBet = action.payload.minBet;\n      state.maxWin = action.payload.maxWin;\n      state.currency = action.payload.currency;\n    }).addCase(getLimits.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default limitsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","maxBet","minBet","maxWin","currency","error","limitsSlice","name","reducers","setLimits","state","action","payload","extraReducers","builder","addCase","getLimits","pending","status","fulfilled","rejected","reducer"],"sources":["/Users/test/turbo_keno_tv/src/Redux/reducers/limitsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  maxBet: null,\n  minBet: null,\n  maxWin: null,\n  currency: null,\n  error: null,\n};\n\nexport const limitsSlice = createSlice({\n  name: 'limits',\n  initialState,\n  reducers: {\n    setLimits: (state, action) => {\n      state.maxBet = action.payload.maxBet;\n      state.minBet = action.payload.minBet;\n      state.maxWin = action.payload.maxWin;\n      state.currency = action.payload.currency;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getLimits.pending, state => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(getLimits.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.error = null;\n        state.maxBet = action.payload.maxBet;\n        state.minBet = action.payload.minBet;\n        state.maxWin = action.payload.maxWin;\n        state.currency = action.payload.currency;\n      })\n      .addCase(getLimits.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default limitsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,IADW;EAEnBC,MAAM,EAAE,IAFW;EAGnBC,MAAM,EAAE,IAHW;EAInBC,QAAQ,EAAE,IAJS;EAKnBC,KAAK,EAAE;AALY,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACrCQ,IAAI,EAAE,QAD+B;EAErCP,YAFqC;EAGrCQ,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAP,CAAeX,MAA9B;MACAS,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACC,OAAP,CAAeV,MAA9B;MACAQ,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAP,CAAeT,MAA9B;MACAO,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeR,QAAhC;IACD;EANO,CAH2B;EAWrCS,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OADH,CACWC,SAAS,CAACC,OADrB,EAC8BP,KAAK,IAAI;MACnCA,KAAK,CAACQ,MAAN,GAAe,SAAf;MACAR,KAAK,CAACL,KAAN,GAAc,IAAd;IACD,CAJH,EAKGU,OALH,CAKWC,SAAS,CAACG,SALrB,EAKgC,CAACT,KAAD,EAAQC,MAAR,KAAmB;MAC/CD,KAAK,CAACQ,MAAN,GAAe,WAAf;MACAR,KAAK,CAACL,KAAN,GAAc,IAAd;MACAK,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAP,CAAeX,MAA9B;MACAS,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACC,OAAP,CAAeV,MAA9B;MACAQ,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAP,CAAeT,MAA9B;MACAO,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeR,QAAhC;IACD,CAZH,EAaGW,OAbH,CAaWC,SAAS,CAACI,QAbrB,EAa+B,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAC9CD,KAAK,CAACQ,MAAN,GAAe,QAAf;MACAR,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;IACD,CAhBH;EAiBD;AA7BoC,CAAD,CAA/B;AAgCP,eAAeN,WAAW,CAACe,OAA3B"},"metadata":{},"sourceType":"module"}