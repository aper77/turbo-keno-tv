{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const dispatch = useDispatch();\n\n  if (!expiryTimestamp) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n  useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireRef: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireReset: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpirePause: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireStart: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireResume: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireStop: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onTick: _ref2 => {\n      let {\n        seconds,\n        minutes\n      } = _ref2;\n      setSeconds(seconds);\n      setMinutes(minutes);\n    }\n  });\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch, expiryTimestamp]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"dGhEvg1cIsmBz+7rhu2Ovzs6CxY=\", false, function () {\n  return [useDispatch, useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useTimer","getLimits","getFrequency","getMarkets","getHistory","getTimer","Timer","expiryTimestamp","seconds","setSeconds","minutes","setMinutes","dispatch","time","Date","timeOnSeconds","getSeconds","onExpire","window","location","reload","console","log","onExpireRef","onExpireReset","onExpirePause","onExpireStart","onExpireResume","onExpireStop","onTick"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks';\n\nconst Timer = ({ expiryTimestamp }) => {\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const dispatch = useDispatch();\n\n  if (!expiryTimestamp) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n\n  useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireRef: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireReset: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpirePause: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireStart: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireResume: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onExpireStop: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n    onTick: ({ seconds, minutes }) => {\n      setSeconds(seconds);\n      setMinutes(minutes);\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch, expiryTimestamp]);\n\n  return (\n    <span>\n      <span>{minutes}</span>:<span>{seconds}</span>\n    </span>\n  );\n};\n\nexport default Timer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}