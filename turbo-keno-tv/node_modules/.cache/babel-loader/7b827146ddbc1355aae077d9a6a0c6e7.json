{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks'; // const Timer = ({ expiryTimestamp }) => {\n//   const dispatch = useDispatch();\n//   if (!expiryTimestamp) {\n//     return null;\n//   }\n//   const time = new Date();\n//   const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n//   const { seconds, minutes } = useTimer({\n//     expiryTimestamp: timeOnSeconds,\n//     onExpire: () => {\n//       window.location.reload();\n//       console.log('Time Expire');\n//     },\n//   });\n//   useEffect(() => {\n//     if (seconds === 0 && minutes === 0) {\n//       console.log('Timer has expired! Fetching new data...');\n//       dispatch(getLimits());\n//       dispatch(getFrequency());\n//       dispatch(getMarkets());\n//       dispatch(getHistory());\n//       dispatch(getTimer());\n//     }\n//   }, [seconds, minutes, dispatch, expiryTimestamp]);\n//   return (\n//     <span>\n//       <span>{minutes}</span>:<span>{seconds}</span>\n//     </span>\n//   );\n// };\n// export default Timer;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useTimer","getLimits","getFrequency","getMarkets","getHistory","getTimer"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks';\n\n// const Timer = ({ expiryTimestamp }) => {\n//   const dispatch = useDispatch();\n\n//   if (!expiryTimestamp) {\n//     return null;\n//   }\n\n//   const time = new Date();\n//   const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n\n//   const { seconds, minutes } = useTimer({\n//     expiryTimestamp: timeOnSeconds,\n//     onExpire: () => {\n//       window.location.reload();\n//       console.log('Time Expire');\n//     },\n//   });\n\n//   useEffect(() => {\n//     if (seconds === 0 && minutes === 0) {\n//       console.log('Timer has expired! Fetching new data...');\n//       dispatch(getLimits());\n//       dispatch(getFrequency());\n//       dispatch(getMarkets());\n//       dispatch(getHistory());\n//       dispatch(getTimer());\n//     }\n//   }, [seconds, minutes, dispatch, expiryTimestamp]);\n//   return (\n//     <span>\n//       <span>{minutes}</span>:<span>{seconds}</span>\n//     </span>\n//   );\n// };\n\n// export default Timer;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,gCAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}