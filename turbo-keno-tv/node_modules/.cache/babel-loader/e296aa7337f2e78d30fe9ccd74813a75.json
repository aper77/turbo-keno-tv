{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const {\n    authState\n  } = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [timeOnSeconds, setTimeOnSeconds] = useState(null);\n  useEffect(() => {\n    const time = new Date();\n    setTimeOnSeconds(time.setSeconds(time.getSeconds() + expiryTimestamp));\n  }, [expiryTimestamp]);\n  const {\n    seconds,\n    minutes\n  } = useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    }\n  });\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"f4mjwbT1Ru7yYgygc3cPy/1jG8c=\", false, function () {\n  return [useDispatch, useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useDispatch","useTimer","getLimits","getFrequency","getMarkets","getHistory","getTimer","AuthContext","Timer","expiryTimestamp","authState","dispatch","timeOnSeconds","setTimeOnSeconds","time","Date","setSeconds","getSeconds","seconds","minutes","onExpire","window","location","reload","console","log"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/thunks/timerThunks';\nimport { AuthContext } from '../../contexts/AuthContext';\n\nconst Timer = ({ expiryTimestamp }) => {\n  const { authState } = useContext(AuthContext);\n  const dispatch = useDispatch();\n\n  const [timeOnSeconds, setTimeOnSeconds] = useState(null);\n\n  useEffect(() => {\n    const time = new Date();\n    setTimeOnSeconds(time.setSeconds(time.getSeconds() + expiryTimestamp));\n  }, [expiryTimestamp]);\n\n  const { seconds, minutes } = useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      window.location.reload();\n      console.log('Time Expire');\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch]);\n\n  return (\n    <span>\n      <span>{minutes}</span>:<span>{seconds}</span>\n    </span>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAM;IAAEC;EAAF,IAAgBX,UAAU,CAACQ,WAAD,CAAhC;EACA,MAAMI,QAAQ,GAAGX,WAAW,EAA5B;EAEA,MAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMiB,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACAF,gBAAgB,CAACC,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoBR,eAApC,CAAD,CAAhB;EACD,CAHQ,EAGN,CAACA,eAAD,CAHM,CAAT;EAKA,MAAM;IAAES,OAAF;IAAWC;EAAX,IAAuBlB,QAAQ,CAAC;IACpCQ,eAAe,EAAEG,aADmB;IAEpCQ,QAAQ,EAAE,MAAM;MACdC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MACAC,OAAO,CAACC,GAAR,CAAY,aAAZ;IACD;EALmC,CAAD,CAArC;EAQA5B,SAAS,CAAC,MAAM;IACd,IAAIqB,OAAO,KAAK,CAAZ,IAAiBC,OAAO,KAAK,CAAjC,EAAoC;MAClCK,OAAO,CAACC,GAAR,CAAY,yCAAZ;MACAd,QAAQ,CAACT,SAAS,EAAV,CAAR;MACAS,QAAQ,CAACR,YAAY,EAAb,CAAR;MACAQ,QAAQ,CAACP,UAAU,EAAX,CAAR;MACAO,QAAQ,CAACN,UAAU,EAAX,CAAR;MACAM,QAAQ,CAACL,QAAQ,EAAT,CAAR;IACD;EACF,CATQ,EASN,CAACY,OAAD,EAAUC,OAAV,EAAmBR,QAAnB,CATM,CAAT;EAWA,oBACE;IAAA,wBACE;MAAA,UAAOQ;IAAP;MAAA;MAAA;MAAA;IAAA,QADF,oBACyB;MAAA,UAAOD;IAAP;MAAA;MAAA;MAAA;IAAA,QADzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAnCD;;GAAMV,K;UAEaR,W,EASYC,Q;;;KAXzBO,K;AAqCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}