{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setFrequency } from '../reducers/frequencySlice';\nimport axios from 'axios'; // const mockFrequencyData = {\n//   data: {\n//     ballFrequency: {\n//       100: {\n//         hotBalls: [\n//           [15, 10],\n//           [12, 8],\n//           [13, 6, 3],\n//           [11, 4],\n//           [14, 2],\n//         ],\n//         coldBalls: [\n//           [6, 2],\n//           [17, 4],\n//           [1, 6],\n//           [19, 8],\n//           [10, 10],\n//         ],\n//       },\n//     },\n//   },\n// };\n\nexport const getFrequency = createAsyncThunk('frequency/getFrequency', async (_, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n\n  try {\n    const response = await axios.get(`http://oliver.energaming.systems:20034/api/v1/get-generic-info`, {\n      params: {\n        token: 'test-frontend-token',\n        duration: 3,\n        page: 0\n      }\n    });\n    console.log(response.data); // const response = mockFrequencyData;\n\n    const {\n      hotBalls,\n      coldBalls\n    } = response.data.ballFrequency['100'];\n    dispatch(setFrequency({\n      hotNums: hotBalls.map(el => el[0]),\n      coldNums: coldBalls.map(el => el[0])\n    }));\n    return true;\n  } catch (error) {\n    throw new Error('Error fetching limits data');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setFrequency","axios","getFrequency","_","dispatch","response","get","params","token","duration","page","console","log","data","hotBalls","coldBalls","ballFrequency","hotNums","map","el","coldNums","error","Error"],"sources":["/Users/test/turbo_keno_tv/src/Redux/thunks/frequencyThunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setFrequency } from '../reducers/frequencySlice';\nimport axios from 'axios';\n\n// const mockFrequencyData = {\n//   data: {\n//     ballFrequency: {\n//       100: {\n//         hotBalls: [\n//           [15, 10],\n//           [12, 8],\n//           [13, 6, 3],\n//           [11, 4],\n//           [14, 2],\n//         ],\n//         coldBalls: [\n//           [6, 2],\n//           [17, 4],\n//           [1, 6],\n//           [19, 8],\n//           [10, 10],\n//         ],\n//       },\n//     },\n//   },\n// };\n\nexport const getFrequency = createAsyncThunk(\n  'frequency/getFrequency',\n  async (_, { dispatch }) => {\n    try {\n      const response = await axios.get(\n        `http://oliver.energaming.systems:20034/api/v1/get-generic-info`,\n        {\n          params: {\n            token: 'test-frontend-token',\n            duration: 3,\n            page: 0,\n          },\n        },\n      );\n      console.log(response.data);\n      // const response = mockFrequencyData;\n      const { hotBalls, coldBalls } = response.data.ballFrequency['100'];\n      dispatch(\n        setFrequency({\n          hotNums: hotBalls.map(el => el[0]),\n          coldNums: coldBalls.map(el => el[0]),\n        }),\n      );\n      return true;\n    } catch (error) {\n      throw new Error('Error fetching limits data');\n    }\n  },\n);\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAC1C,wBAD0C,EAE1C,OAAOI,CAAP,WAA2B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EACzB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACpB,gEADoB,EAErB;MACEC,MAAM,EAAE;QACNC,KAAK,EAAE,qBADD;QAENC,QAAQ,EAAE,CAFJ;QAGNC,IAAI,EAAE;MAHA;IADV,CAFqB,CAAvB;IAUAC,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACQ,IAArB,EAXE,CAYF;;IACA,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA0BV,QAAQ,CAACQ,IAAT,CAAcG,aAAd,CAA4B,KAA5B,CAAhC;IACAZ,QAAQ,CACNJ,YAAY,CAAC;MACXiB,OAAO,EAAEH,QAAQ,CAACI,GAAT,CAAaC,EAAE,IAAIA,EAAE,CAAC,CAAD,CAArB,CADE;MAEXC,QAAQ,EAAEL,SAAS,CAACG,GAAV,CAAcC,EAAE,IAAIA,EAAE,CAAC,CAAD,CAAtB;IAFC,CAAD,CADN,CAAR;IAMA,OAAO,IAAP;EACD,CArBD,CAqBE,OAAOE,KAAP,EAAc;IACd,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EACD;AACF,CA3ByC,CAArC"},"metadata":{},"sourceType":"module"}