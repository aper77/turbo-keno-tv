{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/reducers/timerSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const dispatch = useDispatch();\n  const [timesteo, setTimestep] = useState(expiryTimestamp); // const expiryTimestamp = useSelector(selectTimer);\n\n  useEffect(() => {\n    setTimestep(expiryTimestamp);\n  }, [expiryTimestamp]);\n\n  if (!timesteo) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + timesteo);\n  const {\n    seconds,\n    minutes\n  } = useTimer({\n    timesteo: timeOnSeconds,\n    onExpire: () => {\n      console.log('asa');\n    }\n  });\n  useEffect(() => {\n    console.log(seconds + 'aper');\n\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"EQNCEcPZvhADED3emSylkhj9REY=\", false, function () {\n  return [useDispatch, useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useTimer","getLimits","getFrequency","getMarkets","getHistory","getTimer","Timer","expiryTimestamp","dispatch","timesteo","setTimestep","time","Date","timeOnSeconds","setSeconds","getSeconds","seconds","minutes","onExpire","console","log"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTimer } from 'react-timer-hook';\nimport { getLimits } from '../../Redux/thunks/limitsThunks';\nimport { getFrequency } from '../../Redux/thunks/frequencyThunks';\nimport { getMarkets } from '../../Redux/thunks/marketsThunks';\nimport { getHistory } from '../../Redux/thunks/historyThunks';\nimport { getTimer } from '../../Redux/reducers/timerSlice';\n\nconst Timer = ({ expiryTimestamp }) => {\n  const dispatch = useDispatch();\n  const [timesteo, setTimestep] = useState(expiryTimestamp);\n  // const expiryTimestamp = useSelector(selectTimer);\n\n  useEffect(() => {\n    setTimestep(expiryTimestamp);\n  }, [expiryTimestamp]);\n\n  if (!timesteo) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + timesteo);\n\n  const { seconds, minutes } = useTimer({\n    timesteo: timeOnSeconds,\n    onExpire: () => {\n      console.log('asa');\n    },\n  });\n\n  useEffect(() => {\n    console.log(seconds + 'aper');\n\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch]);\n\n  return (\n    <span>\n      <span>{minutes}</span>:<span>{seconds}</span>\n    </span>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,iCAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACS,eAAD,CAAxC,CAFqC,CAGrC;;EAEAV,SAAS,CAAC,MAAM;IACda,WAAW,CAACH,eAAD,CAAX;EACD,CAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;;EAIA,IAAI,CAACE,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EAED,MAAME,IAAI,GAAG,IAAIC,IAAJ,EAAb;EACA,MAAMC,aAAa,GAAGF,IAAI,CAACG,UAAL,CAAgBH,IAAI,CAACI,UAAL,KAAoBN,QAApC,CAAtB;EAEA,MAAM;IAAEO,OAAF;IAAWC;EAAX,IAAuBjB,QAAQ,CAAC;IACpCS,QAAQ,EAAEI,aAD0B;IAEpCK,QAAQ,EAAE,MAAM;MACdC,OAAO,CAACC,GAAR,CAAY,KAAZ;IACD;EAJmC,CAAD,CAArC;EAOAvB,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACC,GAAR,CAAYJ,OAAO,GAAG,MAAtB;;IAEA,IAAIA,OAAO,KAAK,CAAZ,IAAiBC,OAAO,KAAK,CAAjC,EAAoC;MAClCE,OAAO,CAACC,GAAR,CAAY,yCAAZ;MACAZ,QAAQ,CAACP,SAAS,EAAV,CAAR;MACAO,QAAQ,CAACN,YAAY,EAAb,CAAR;MACAM,QAAQ,CAACL,UAAU,EAAX,CAAR;MACAK,QAAQ,CAACJ,UAAU,EAAX,CAAR;MACAI,QAAQ,CAACH,QAAQ,EAAT,CAAR;IACD;EACF,CAXQ,EAWN,CAACW,OAAD,EAAUC,OAAV,EAAmBT,QAAnB,CAXM,CAAT;EAaA,oBACE;IAAA,wBACE;MAAA,UAAOS;IAAP;MAAA;MAAA;MAAA;IAAA,QADF,oBACyB;MAAA,UAAOD;IAAP;MAAA;MAAA;MAAA;IAAA,QADzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAzCD;;GAAMV,K;UACaP,W,EAeYC,Q;;;KAhBzBM,K;AA2CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}