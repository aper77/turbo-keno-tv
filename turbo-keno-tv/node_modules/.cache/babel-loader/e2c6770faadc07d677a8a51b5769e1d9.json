{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setMarkets } from '../reducers/marketSlice';\nconst markets = [{\n  market_id: 1,\n  market_title: 'Market 1',\n  prices: [{\n    price_id: 1,\n    price_name: 'Price 1',\n    rate: 10\n  }, {\n    price_id: 2,\n    price_name: 'Price 2',\n    rate: 20\n  }]\n}, {\n  market_id: 2,\n  market_title: 'Market 2',\n  prices: [{\n    price_id: 4,\n    price_name: 'Price 4',\n    rate: 40\n  }, {\n    price_id: 5,\n    price_name: 'Price 5',\n    rate: 50\n  }]\n}];\nexport const getMarkets = createAsyncThunk('markets/getMarkets', async (_, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n\n  try {\n    // const res = await axios.get(\n    //     `http://oliver.energaming.systems:20035/api/v1/markets/get`,\n    //     {\n    //       params: {\n    //         token: 'test-frontend-token',\n    //         duration: 3,\n    //         page: 0,\n    //       },\n    //     },\n    //   );\n    const response = markets;\n    dispatch(setMarkets(response));\n    return res;\n  } catch (error) {\n    dispatch(getLimits.rejected(error.message));\n    throw new Error('Error fetching limits data');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setMarkets","markets","market_id","market_title","prices","price_id","price_name","rate","getMarkets","_","dispatch","response","res","error","getLimits","rejected","message","Error"],"sources":["/Users/test/turbo_keno_tv/src/Redux/thunks/marketsThunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setMarkets } from '../reducers/marketSlice';\n\nconst markets = [\n  {\n    market_id: 1,\n    market_title: 'Market 1',\n    prices: [\n      { price_id: 1, price_name: 'Price 1', rate: 10 },\n      { price_id: 2, price_name: 'Price 2', rate: 20 },\n    ],\n  },\n  {\n    market_id: 2,\n    market_title: 'Market 2',\n    prices: [\n      { price_id: 4, price_name: 'Price 4', rate: 40 },\n      { price_id: 5, price_name: 'Price 5', rate: 50 },\n    ],\n  },\n];\n\nexport const getMarkets = createAsyncThunk(\n  'markets/getMarkets',\n  async (_, { dispatch }) => {\n    try {\n      // const res = await axios.get(\n      //     `http://oliver.energaming.systems:20035/api/v1/markets/get`,\n      //     {\n      //       params: {\n      //         token: 'test-frontend-token',\n      //         duration: 3,\n      //         page: 0,\n      //       },\n      //     },\n      //   );\n\n      const response = markets;\n      dispatch(setMarkets(response));\n      return res;\n    } catch (error) {\n      dispatch(getLimits.rejected(error.message));\n      throw new Error('Error fetching limits data');\n    }\n  },\n);\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,MAAMC,OAAO,GAAG,CACd;EACEC,SAAS,EAAE,CADb;EAEEC,YAAY,EAAE,UAFhB;EAGEC,MAAM,EAAE,CACN;IAAEC,QAAQ,EAAE,CAAZ;IAAeC,UAAU,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CADM,EAEN;IAAEF,QAAQ,EAAE,CAAZ;IAAeC,UAAU,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CAFM;AAHV,CADc,EASd;EACEL,SAAS,EAAE,CADb;EAEEC,YAAY,EAAE,UAFhB;EAGEC,MAAM,EAAE,CACN;IAAEC,QAAQ,EAAE,CAAZ;IAAeC,UAAU,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CADM,EAEN;IAAEF,QAAQ,EAAE,CAAZ;IAAeC,UAAU,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CAFM;AAHV,CATc,CAAhB;AAmBA,OAAO,MAAMC,UAAU,GAAGT,gBAAgB,CACxC,oBADwC,EAExC,OAAOU,CAAP,WAA2B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EACzB,IAAI;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,QAAQ,GAAGV,OAAjB;IACAS,QAAQ,CAACV,UAAU,CAACW,QAAD,CAAX,CAAR;IACA,OAAOC,GAAP;EACD,CAfD,CAeE,OAAOC,KAAP,EAAc;IACdH,QAAQ,CAACI,SAAS,CAACC,QAAV,CAAmBF,KAAK,CAACG,OAAzB,CAAD,CAAR;IACA,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EACD;AACF,CAtBuC,CAAnC"},"metadata":{},"sourceType":"module"}