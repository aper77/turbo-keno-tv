{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n\n  if (!expiryTimestamp) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n  const {\n    seconds,\n    minutes\n  } = useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      console.log('asa');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"nS5aooOkJBSRT/7LJRQhEyph7OM=\", false, function () {\n  return [useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useTimer","Timer","expiryTimestamp","time","Date","timeOnSeconds","setSeconds","getSeconds","seconds","minutes","onExpire","console","log","dispatch","getLimits","getFrequency","getMarkets","getHistory","getTimer"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React from 'react';\nimport { useTimer } from 'react-timer-hook';\n\n\nconst Timer = ({ expiryTimestamp }) => {\n  if (!expiryTimestamp) {\n    return null;\n  }\n\n  const time = new Date();\n  const timeOnSeconds = time.setSeconds(time.getSeconds() + expiryTimestamp);\n  const { seconds, minutes } = useTimer({\n    expiryTimestamp: timeOnSeconds,\n    onExpire: () => {\n      console.log('asa');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    },\n  });\n  return (\n    <span>\n      <span>{minutes}</span>:<span>{seconds}</span>\n    </span>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAGA,MAAMC,KAAK,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EACrC,IAAI,CAACA,eAAL,EAAsB;IACpB,OAAO,IAAP;EACD;;EAED,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;EACA,MAAMC,aAAa,GAAGF,IAAI,CAACG,UAAL,CAAgBH,IAAI,CAACI,UAAL,KAAoBL,eAApC,CAAtB;EACA,MAAM;IAAEM,OAAF;IAAWC;EAAX,IAAuBT,QAAQ,CAAC;IACpCE,eAAe,EAAEG,aADmB;IAEpCK,QAAQ,EAAE,MAAM;MACdC,OAAO,CAACC,GAAR,CAAY,KAAZ;MACAC,QAAQ,CAACC,SAAS,EAAV,CAAR;MACAD,QAAQ,CAACE,YAAY,EAAb,CAAR;MACAF,QAAQ,CAACG,UAAU,EAAX,CAAR;MACAH,QAAQ,CAACI,UAAU,EAAX,CAAR;MACAJ,QAAQ,CAACK,QAAQ,EAAT,CAAR;IACD;EATmC,CAAD,CAArC;EAWA,oBACE;IAAA,wBACE;MAAA,UAAOT;IAAP;MAAA;MAAA;MAAA;IAAA,QADF,oBACyB;MAAA,UAAOD;IAAP;MAAA;MAAA;MAAA;IAAA,QADzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBD;;GAAMP,K;UAOyBD,Q;;;KAPzBC,K;AAyBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}