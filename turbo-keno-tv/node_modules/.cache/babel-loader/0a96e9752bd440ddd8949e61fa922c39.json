{"ast":null,"code":"var _jsxFileName = \"/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const dispatch = useDispatch();\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = expiryTimestamp - now;\n\n      if (distance <= 0) {\n        clearInterval(intervalId);\n        window.location.reload();\n        console.log('Time Expire');\n      } else {\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        setMinutes(minutes);\n        setSeconds(seconds);\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [expiryTimestamp]);\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch, expiryTimestamp]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"e64csnmlPW9jkPfgqakmx3bSw4M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","Timer","expiryTimestamp","dispatch","seconds","setSeconds","minutes","setMinutes","intervalId","setInterval","now","Date","getTime","distance","clearInterval","window","location","reload","console","log","Math","floor","getLimits","getFrequency","getMarkets","getHistory","getTimer"],"sources":["/Users/test/turbo_keno_tv/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Timer = ({ expiryTimestamp }) => {\n  const dispatch = useDispatch();\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = expiryTimestamp - now;\n\n      if (distance <= 0) {\n        clearInterval(intervalId);\n        window.location.reload();\n        console.log('Time Expire');\n      } else {\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n        setMinutes(minutes);\n        setSeconds(seconds);\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [expiryTimestamp]);\n\n  useEffect(() => {\n    if (seconds === 0 && minutes === 0) {\n      console.log('Timer has expired! Fetching new data...');\n      dispatch(getLimits());\n      dispatch(getFrequency());\n      dispatch(getMarkets());\n      dispatch(getHistory());\n      dispatch(getTimer());\n    }\n  }, [seconds, minutes, dispatch, expiryTimestamp]);\n\n  return (\n    <span>\n      <span>{minutes}</span>:<span>{seconds}</span>\n    </span>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,KAAK,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;MACA,MAAMC,QAAQ,GAAGX,eAAe,GAAGQ,GAAnC;;MAEA,IAAIG,QAAQ,IAAI,CAAhB,EAAmB;QACjBC,aAAa,CAACN,UAAD,CAAb;QACAO,MAAM,CAACC,QAAP,CAAgBC,MAAhB;QACAC,OAAO,CAACC,GAAR,CAAY,aAAZ;MACD,CAJD,MAIO;QACL,MAAMb,OAAO,GAAGc,IAAI,CAACC,KAAL,CAAYR,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAhB;QACA,MAAMT,OAAO,GAAGgB,IAAI,CAACC,KAAL,CAAYR,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB;QAEAN,UAAU,CAACD,OAAD,CAAV;QACAD,UAAU,CAACD,OAAD,CAAV;MACD;IACF,CAf2B,EAezB,IAfyB,CAA5B;IAiBA,OAAO,MAAMU,aAAa,CAACN,UAAD,CAA1B;EACD,CAnBQ,EAmBN,CAACN,eAAD,CAnBM,CAAT;EAqBAH,SAAS,CAAC,MAAM;IACd,IAAIK,OAAO,KAAK,CAAZ,IAAiBE,OAAO,KAAK,CAAjC,EAAoC;MAClCY,OAAO,CAACC,GAAR,CAAY,yCAAZ;MACAhB,QAAQ,CAACmB,SAAS,EAAV,CAAR;MACAnB,QAAQ,CAACoB,YAAY,EAAb,CAAR;MACApB,QAAQ,CAACqB,UAAU,EAAX,CAAR;MACArB,QAAQ,CAACsB,UAAU,EAAX,CAAR;MACAtB,QAAQ,CAACuB,QAAQ,EAAT,CAAR;IACD;EACF,CATQ,EASN,CAACtB,OAAD,EAAUE,OAAV,EAAmBH,QAAnB,EAA6BD,eAA7B,CATM,CAAT;EAWA,oBACE;IAAA,wBACE;MAAA,UAAOI;IAAP;MAAA;MAAA;MAAA;IAAA,QADF,oBACyB;MAAA,UAAOF;IAAP;MAAA;MAAA;MAAA;IAAA,QADzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1CD;;GAAMH,K;UACaD,W;;;KADbC,K;AA4CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}