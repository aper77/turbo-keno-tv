{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setMarkets } from '../reducers/marketSlice';\nimport axios from 'axios'; // export const markets = [\n//   {\n//     market_id: 1,\n//     market_title: 'Market 1',\n//     prices: [\n//       { price_id: 1, price_name: 'Price 1', rate: 10 },\n//       { price_id: 2, price_name: 'Price 2', rate: 20 },\n//     ],\n//   },\n//   {\n//     market_id: 2,\n//     market_title: 'Market 2',\n//     prices: [\n//       { price_id: 4, price_name: 'Price 4', rate: 40 },\n//       { price_id: 5, price_name: 'Price 5', rate: 50 },\n//     ],\n//   },\n// ];\n\nexport const getMarkets = createAsyncThunk('markets/getMarkets', async (_, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n\n  try {\n    const response = await axios.get(`http://oliver.energaming.systems:20035/api/v1/markets/get`, {\n      params: {\n        token: 'test-frontend-token',\n        duration: 3,\n        page: 0\n      }\n    }); // const markets = response.data.map(market => {\n    //   return {\n    //     market_id: market.id,\n    //     market_title: market.title,\n    //     prices: market.prices.map(price => {\n    //       return {\n    //         price_id: price.id,\n    //         price_name: price.name,\n    //         rate: price.rate,\n    //       };\n    //     }),\n    //   };\n    // });\n\n    console.log(JSON.stringify(response) + 'aper');\n    dispatch(setMarkets(markets));\n    return markets;\n  } catch (error) {\n    throw new Error('Error fetching markets data');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setMarkets","axios","getMarkets","_","dispatch","response","get","params","token","duration","page","console","log","JSON","stringify","markets","error","Error"],"sources":["/Users/test/turbo_keno_tv/src/Redux/thunks/marketsThunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setMarkets } from '../reducers/marketSlice';\nimport axios from 'axios';\n\n// export const markets = [\n//   {\n//     market_id: 1,\n//     market_title: 'Market 1',\n//     prices: [\n//       { price_id: 1, price_name: 'Price 1', rate: 10 },\n//       { price_id: 2, price_name: 'Price 2', rate: 20 },\n//     ],\n//   },\n//   {\n//     market_id: 2,\n//     market_title: 'Market 2',\n//     prices: [\n//       { price_id: 4, price_name: 'Price 4', rate: 40 },\n//       { price_id: 5, price_name: 'Price 5', rate: 50 },\n//     ],\n//   },\n// ];\n\nexport const getMarkets = createAsyncThunk(\n  'markets/getMarkets',\n  async (_, { dispatch }) => {\n    try {\n      const response = await axios.get(\n        `http://oliver.energaming.systems:20035/api/v1/markets/get`,\n        {\n          params: {\n            token: 'test-frontend-token',\n            duration: 3,\n            page: 0,\n          },\n        },\n      );\n\n      // const markets = response.data.map(market => {\n      //   return {\n      //     market_id: market.id,\n      //     market_title: market.title,\n      //     prices: market.prices.map(price => {\n      //       return {\n      //         price_id: price.id,\n      //         price_name: price.name,\n      //         rate: price.rate,\n      //       };\n      //     }),\n      //   };\n      // });\n\n      console.log(JSON.stringify(response) + 'aper');\n      dispatch(setMarkets(markets));\n      return markets;\n    } catch (error) {\n      throw new Error('Error fetching markets data');\n    }\n  },\n);\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,oBADwC,EAExC,OAAOI,CAAP,WAA2B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EACzB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACpB,2DADoB,EAErB;MACEC,MAAM,EAAE;QACNC,KAAK,EAAE,qBADD;QAENC,QAAQ,EAAE,CAFJ;QAGNC,IAAI,EAAE;MAHA;IADV,CAFqB,CAAvB,CADE,CAYF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeT,QAAf,IAA2B,MAAvC;IACAD,QAAQ,CAACJ,UAAU,CAACe,OAAD,CAAX,CAAR;IACA,OAAOA,OAAP;EACD,CA7BD,CA6BE,OAAOC,KAAP,EAAc;IACd,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;EACD;AACF,CAnCuC,CAAnC"},"metadata":{},"sourceType":"module"}