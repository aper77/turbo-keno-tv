{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { setFrequency } from '../reducers/frequencySlice';\nconst mockFrequencyData = {\n  data: {\n    ballFrequency: {\n      100: {\n        hotBalls: [[1, 10], [2, 8], [3, 6], [4, 4], [5, 2]],\n        coldBalls: [[6, 2], [7, 4], [8, 6], [9, 8], [10, 10]]\n      }\n    }\n  }\n};\nexport const getFrequency = createAsyncThunk('frequency/getFrequency', async (_, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n\n  try {\n    //   const res = await axios.get(\n    //     `http://oliver.energaming.systems:20035/api/v1/get-generic-info`,\n    //     {\n    //       params: {\n    //         token: 'test-frontend-token',\n    //         duration: 3,\n    //         page: 0,\n    //       },\n    //     },\n    //   );\n    dispatch(setFrequency({\n      data\n    }));\n    return res;\n  } catch (error) {\n    dispatch(getLimits.rejected(error.message));\n    throw new Error('Error fetching limits data');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","setFrequency","mockFrequencyData","data","ballFrequency","hotBalls","coldBalls","getFrequency","_","dispatch","res","error","getLimits","rejected","message","Error"],"sources":["/Users/test/turbo_keno_tv/src/Redux/thunks/frequencyThunks.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { setFrequency } from '../reducers/frequencySlice';\n\nconst mockFrequencyData = {\n  data: {\n    ballFrequency: {\n      100: {\n        hotBalls: [\n          [1, 10],\n          [2, 8],\n          [3, 6],\n          [4, 4],\n          [5, 2],\n        ],\n        coldBalls: [\n          [6, 2],\n          [7, 4],\n          [8, 6],\n          [9, 8],\n          [10, 10],\n        ],\n      },\n    },\n  },\n};\n\nexport const getFrequency = createAsyncThunk(\n  'frequency/getFrequency',\n  async (_, { dispatch }) => {\n    try {\n      //   const res = await axios.get(\n      //     `http://oliver.energaming.systems:20035/api/v1/get-generic-info`,\n      //     {\n      //       params: {\n      //         token: 'test-frontend-token',\n      //         duration: 3,\n      //         page: 0,\n      //       },\n      //     },\n      //   );\n\n      dispatch(setFrequency({ data }));\n      return res;\n    } catch (error) {\n      dispatch(getLimits.rejected(error.message));\n      throw new Error('Error fetching limits data');\n    }\n  },\n);\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,IAAI,EAAE;IACJC,aAAa,EAAE;MACb,KAAK;QACHC,QAAQ,EAAE,CACR,CAAC,CAAD,EAAI,EAAJ,CADQ,EAER,CAAC,CAAD,EAAI,CAAJ,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAJ,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,CAJQ,EAKR,CAAC,CAAD,EAAI,CAAJ,CALQ,CADP;QAQHC,SAAS,EAAE,CACT,CAAC,CAAD,EAAI,CAAJ,CADS,EAET,CAAC,CAAD,EAAI,CAAJ,CAFS,EAGT,CAAC,CAAD,EAAI,CAAJ,CAHS,EAIT,CAAC,CAAD,EAAI,CAAJ,CAJS,EAKT,CAAC,EAAD,EAAK,EAAL,CALS;MARR;IADQ;EADX;AADkB,CAA1B;AAuBA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAC1C,wBAD0C,EAE1C,OAAOU,CAAP,WAA2B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EACzB,IAAI;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAA,QAAQ,CAACR,YAAY,CAAC;MAAEE;IAAF,CAAD,CAAb,CAAR;IACA,OAAOO,GAAP;EACD,CAdD,CAcE,OAAOC,KAAP,EAAc;IACdF,QAAQ,CAACG,SAAS,CAACC,QAAV,CAAmBF,KAAK,CAACG,OAAzB,CAAD,CAAR;IACA,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EACD;AACF,CArByC,CAArC"},"metadata":{},"sourceType":"module"}